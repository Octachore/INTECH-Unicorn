using FluentAssertions;
using ITI.Unicorn.Core.Level1;
using NUnit.Framework;

namespace ITI.Unicorn.Tests.Level1
{
    public class S07_WallStreet
    {
        [TestCase(new[] { 7, 1, 5, 3, 6, 4 }, 5)]
        [TestCase(new[] { 50, 73, 54, 46, 84, 17, 60, 51, 25, 83 }, 66)]
        [TestCase(new[] { 231, 255, 315, 308, 272, 146, 202, 83, 31, 102, 126, 87, 162, 213, 444, 266, 350, 140, 219, 57, 327, 35, 456, 174, 15, 471, 20, 274, 339, 149, 480, 144, 246, 347, 256, 354, 311, 26, 298, 383, 412, 488, 110, 212, 78, 134, 318, 296, 334, 386, 442, 192, 320, 282, 214, 226, 42, 193, 369, 417, 247, 184, 58, 395, 254, 288, 52, 473, 51, 458, 118, 117, 62, 105, 278, 385, 65, 409, 71, 329, 188, 289, 120, 166, 264, 411, 393, 104, 425, 138, 185, 405, 399, 279, 94, 476, 114, 285, 152, 426, 436, 45, 190, 443, 17, 459, 238, 304, 250, 180, 27, 56, 301, 290, 86, 204, 498, 233, 438, 248, 40, 283, 72, 177, 398, 328, 500, 378, 119, 30, 13, 330, 300, 394, 379, 209, 373, 205, 344, 475, 24, 116, 271, 211, 433, 82, 422, 19, 121, 495, 310, 413, 137, 230, 186, 484, 54, 232, 275, 145, 428, 195, 431, 306, 163, 441, 227, 437, 182, 33, 462, 447, 493, 48, 107, 367, 229, 307, 89, 92, 281, 28, 319, 381, 136, 322, 37, 88, 249, 176, 316, 257, 345, 291, 154, 84, 141, 63, 375, 489, 38, 491, 222, 479, 401, 280, 74, 34, 90, 253, 343, 450, 396, 273, 25, 208, 418, 244, 95, 46, 245, 132, 432, 406, 12, 465, 10, 191, 486, 372, 336, 414, 73, 424, 466, 69, 478, 68, 499, 305, 355, 43, 377, 70, 276, 314, 303, 109, 482, 445, 352, 130, 309, 366, 215, 50, 460, 260, 420, 150, 494, 362, 178, 223, 124, 77, 47, 218, 455, 292, 485, 203, 483, 135, 333, 11, 157, 75, 108, 142, 167, 357, 224, 382, 408, 241, 312, 267, 496, 183, 23, 446, 427, 210, 128, 199, 103, 342, 175, 376, 18, 391, 277, 221, 125, 263, 388, 29, 337, 464, 387, 313, 85, 286, 194, 469, 97, 410, 235, 156, 492, 497, 368, 96, 259, 39, 360, 49, 449, 169, 242, 234, 106, 299, 200, 448, 76, 196, 346, 111, 317, 67, 265, 341, 122, 392, 164, 252, 374, 262, 160, 359, 207, 258, 147, 302, 32, 325, 127, 423, 197, 338, 351, 206, 353, 151, 220, 115, 66, 243, 172, 380, 370, 225, 287, 187, 430, 60, 133, 470, 198, 390, 153, 80, 477, 98, 419, 457, 487, 439, 99, 91, 348, 100, 321, 481, 297, 397, 36, 371, 416, 364, 474, 155, 168, 269, 112, 189, 294, 179, 400, 323, 143, 434, 452, 79, 429, 451, 240, 113, 270, 461, 435, 361, 403, 61, 239, 16, 81, 216, 402, 236, 363, 472, 384, 64, 131, 201, 173, 181, 161, 340, 295, 148, 55, 165, 237, 415, 14, 158, 331, 101, 170, 293, 335, 356, 53, 349, 217, 93, 123, 139, 332, 171, 326, 284, 59, 44, 41, 22, 463, 421, 365, 159, 21, 324, 490, 261, 468, 454, 404, 358, 268, 467, 228, 440, 389, 407, 251, 453, 129 }, 489)]
        public void P07_WallStreet_GetResult(int[] marketPrices, int expected)
        {
            int result = P07_WallStreet.GetResult(marketPrices);

            result.Should().Be(expected);
        }
    }
}
